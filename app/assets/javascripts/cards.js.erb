$().ready(function() {
 
  var buildParams = function() {
    return {
      for_type : _.map($("#for_type input:checked"), function(e) {
        return $(e).val()
      }),
      for_school : _.map($("#for_school input:checked"), function(e) {
        return $(e).val()
      })
    }
  }

  var mage = function() {
     return $('input[name="mage"]:checked').val()
  }

  var updateCardCost = function(card) {
     var costMap = mageMap[mage()]
     var costs =  _.map(card.levels, function(level_detail) {
        return level_detail.level * (card.novice ? 1 : costMap[level_detail.school_name])
     })

     return (card.cost = (card.or_cost) ?  _.min(costs) : _.reduce(costs, function(memo, cost) { return memo + cost }, 0)) 
  }

  var getUserDeckMaxes = function() {
     return {
       Core: parseInt($('#user_decks_container select[data-deck=Core]').val()),
       Tome: parseInt($('#user_decks_container select[data-deck=Tome]').val())
     }
     
  }

  var updateDeckTr = function(tr) {
    var tr = $(tr)
    var card = $(tr).data('card')
    $('td.cost', tr).text(card.cost = updateCardCost(card)) 
    $('td.total', tr).text(card.deck_cost = card.deck_amount * card.cost) 
  }

  var updateListTr = function(tr) {
    var tr = $(tr)
    var card = $(tr).data('card')
    $('td.cost', tr).text(updateCardCost(card))
  }

  var updateTotalDeckCost = function() {
    var total = _.reduce($('#deck_table td.total'), function(memo, td) {
      return memo + parseInt($(td).text())
    },0)
    $("#total_deck_cost").text(total)
    return total
  }

  var updateAllCards = function() {
    _.each($('#deck_table tbody tr'), updateDeckTr)
    _.each($('#card_list_table tbody tr'), updateListTr)
    updateTotalDeckCost()
  }

  var updateCardMax = function(card) {
     userDeckMaxes = getUserDeckMaxes() 
     return (card.user_max = _.reduce(card.decks, function(memo, deck) {
        return memo + deck.amount * userDeckMaxes[deck.deck_name]
     },0))
  }

  var updateListCardMaxTr = function(tr) {
    var tr = $(tr)
    var card = $(tr).data('card')
    updateCardMax(card) 
        
    var maxText = (card.user_max < card.deck_max) ? "" + card.user_max + "/" + card.deck_max : card.deck_max

    $('td.max', tr).text(maxText)
  }

  var updateDeckAmountTr = function(tr) {
    var tr = $(tr)
    var card = $(tr).data('card')
    if(!card.deck_amount) {
       card.deck_amount = 1
    }
    updateCardMax(card) 

    var max = _.min([card.deck_max, card.user_max])
    card.deck_amount = _.min([max, card.deck_amount])
    var td = $('td.amount', tr).empty()
    if(max === 1) {
      td.text('1') 
    } else {
       var select = $('<select/>').appendTo(td).change(function() {
         card.deck_amount = parseInt($(this).val())
         updateDeckTr(tr)
         updateTotalDeckCost()
       })

       for(i = 1; i <= max; i++) {
         var op = $('<option/>').val(i.toString()).text(i).appendTo(select)
         if(i == card.deck_amount) {
            op.attr('selected', 'selected')
         }
       }
    }
    updateDeckTr(tr)
  }

  var updateCardMaxes = function() {
    _.each($('#deck_table tbody tr'), updateDeckAmountTr)
    _.each($("#card_list_table tbody tr"), updateListCardMaxTr)
  }

  $('select.deck_count').change(updateCardMaxes)

  var addToDeck = function(card) {

     var tbody = $('#deck_table tbody')
     var tr = $('<tr/>').appendTo(tbody).data('card', card).attr('data-code', card.code)  
     $('<td/>').text(card.code).appendTo(tr)
     $('<td/>').text(card.name).appendTo(tr)

     var td = $('<td/>').addClass("amount").appendTo(tr)
     updateDeckAmountTr(tr)

     $('<td/>').addClass("cost").appendTo(tr)
     $('<td/>').addClass("total").appendTo(tr)
     var td = $('<td/>').appendTo(tr)
     $("<button class='btn btn-small'/>").appendTo(td).click(function() {
       enableListCard(card.code)
       $(this).closest('tr').remove()
       updateTotalDeckCost()
     }).append('<i class="icon-trash"/>')

     updateDeckTr(tr)
     updateTotalDeckCost()
     $('#total_cost_container').show()
  }

  var enableListCard = function(code) {
    $('#card_list_table tbody tr[data-code=' + code  + '] button').removeAttr("disabled")
  }

  var deckHasCard = function(code) {
    return $('#deck_table tbody tr[data-code=' + code + ']').length > 0
  }


  var addListCard = function(card) {

    var tbody = $("#card_list_table tbody")
    var tr = $('<tr/>').appendTo(tbody).data('card', card).attr('data-code', card.code) 
    var td = $('<td/>').appendTo(tr)
    var button = $("<button class='btn btn-small'/>").appendTo(td).click(function() {
      addToDeck($(this).closest('tr').data('card'))
      $(this).attr("disabled", "disabled")
    }).append('<i class="icon-arrow-left"/>')
    if(deckHasCard(card.code)) {
      button.attr("disabled", "disabled")
    }

    $('<td/>').appendTo(tr).text(card.code)
    $('<td/>').appendTo(tr).text(card.name)
    $('<td/>').addClass("cost").appendTo(tr).text(updateCardCost(card))
    $('<td/>').addClass('max').appendTo(tr)
    updateListCardMaxTr(tr)
  }

  window.cards = {
     add : addListCard
  }

  var getUrl = function() {
     var pag = $('.pagination em.current')
     return '/cards.js?page=' + (pag.length > 0 ? pag.text() : "1")
  }

  var query = _.throttle(function(href) {
    $.ajax({
      url: (href || getUrl()),
      data: buildParams(),
      dataType: 'script'
    })
  }, 1000)


  // GENERATED
  var mageMap = {}
  <% for mage in Mage.all %> mageMap['<%= mage.name %>'] = {}; <% end  %>
  <% for ms in MageSchool.all %> mageMap['<%= ms.mage_name %>']['<%= ms.school_name %>'] = <%= ms.cost %>; <% end %>
 

  $('#mage_select').one('change', 'input', function() {
    $('#for_type input, #for_school input').change(function() {
      query()
    })
    query()
    $('#filters_container').show()
  })

  $('#mage_select input').change(updateAllCards)

  $('.pagination a').live('click', function() {
     query($(this).attr("href"))
     return false
  })
})
